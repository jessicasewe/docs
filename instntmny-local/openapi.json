{
    "openapi": "3.0.1",
    "info": {
      "title": "OpenAPI Plant Store",
      "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
      "license": {
        "name": "MIT"
      },
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://test.digitaltermination.com"
      }
    ],
    "paths": {
      "/oauth/token": {
        "post": {
          "description": "Generates an OAuth Token with the provided credentials",
          "requestBody": {
            "required": true,
            "content": {
              "application/x-www-form-urlencoded": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "client_id": {
                      "type": "string",
                      "description": "The client ID provided after onboarding"
                    },
                    "client_secret": {
                      "type": "string",
                      "description": "The client secret provided after onboarding"
                    },
                    "username": {
                      "type": "string",
                      "description": "The email used to create the account"
                    },
                    "password": {
                      "type": "string",
                      "description": "The password for authentication"
                    },
                    "grant_type": {
                      "type": "string",
                      "description": "The OAuth2 grant type",
                      "example": "password"
                    }
                  },
                  "required": [
                    "client_id",
                    "client_secret",
                    "username",
                    "password",
                    "grant_type"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Generated OAuth token",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token_type": {
                        "type": "string",
                        "example": "Bearer"
                      },
                      "expires_in": {
                        "type": "integer",
                        "example": 31536000,
                        "description": "Token expiration time in seconds"
                      },
                      "access_token": {
                        "type": "string",
                        "description": "The access token"
                      },
                      "refresh_token": {
                        "type": "string",
                        "description": "The refresh token"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request parameters",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "NewPlant": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Plant"
            },
            {
              "required": ["id"],
              "type": "object",
              "properties": {
                "id": {
                  "description": "Identification number of the plant",
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          ]
        },
        "Error": {
          "required": ["error", "message"],
          "type": "object",
          "properties": {
            "error": {
              "type": "integer",
              "format": "int32"
            },
            "message": {
              "type": "string"
            }
          }
        }
      },
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer"
        }
      }
    }
  }
  